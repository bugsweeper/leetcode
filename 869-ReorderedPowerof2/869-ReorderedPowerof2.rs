// Last updated: 10.08.2025, 15:27:18
const GOAL_DIGITS_COUNT: [[i32; 10]; 31] = [
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0], // 1 << 3 = 8
    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0], // 1 << 2 = 4
    [0, 0, 0, 0, 1, 0, 1, 0, 0, 0], // 1 << 6 = 64
    [0, 0, 0, 1, 0, 2, 2, 0, 0, 0], // 1 << 16 = 65536
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], // 1 << 1 = 2
    [0, 0, 1, 0, 0, 1, 1, 0, 0, 0], // 1 << 8 = 256
    [0, 0, 1, 1, 0, 0, 0, 0, 0, 0], // 1 << 5 = 32
    [0, 0, 1, 1, 0, 0, 1, 1, 1, 0], // 1 << 15 = 32768
    [0, 0, 1, 1, 2, 2, 2, 0, 1, 0], // 1 << 28 = 268435456
    [0, 0, 1, 3, 2, 2, 0, 0, 0, 0], // 1 << 25 = 33554432
    [0, 0, 2, 0, 1, 1, 0, 0, 2, 0], // 1 << 19 = 524288
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0], // 1 << 0 = 1
    [0, 1, 0, 0, 0, 0, 1, 0, 0, 0], // 1 << 4 = 16
    [0, 1, 0, 1, 1, 0, 1, 0, 1, 0], // 1 << 14 = 16384
    [0, 1, 1, 0, 0, 0, 0, 0, 1, 0], // 1 << 7 = 128
    [0, 1, 1, 0, 0, 0, 0, 0, 1, 1], // 1 << 13 = 8192
    [0, 1, 1, 0, 0, 1, 0, 0, 0, 0], // 1 << 9 = 512
    [0, 1, 2, 0, 2, 0, 1, 0, 0, 0], // 1 << 18 = 262144
    [0, 2, 1, 0, 0, 0, 2, 3, 0, 0], // 1 << 24 = 16777216
    [0, 2, 2, 1, 1, 0, 0, 2, 1, 0], // 1 << 27 = 134217728
    [1, 0, 0, 0, 1, 0, 1, 0, 0, 1], // 1 << 12 = 4096
    [1, 0, 0, 1, 0, 0, 1, 0, 4, 0], // 1 << 23 = 8388608
    [1, 0, 1, 0, 1, 0, 0, 0, 1, 0], // 1 << 11 = 2048
    [1, 1, 0, 0, 1, 0, 2, 1, 2, 0], // 1 << 26 = 67108864
    [1, 1, 0, 0, 1, 1, 1, 1, 1, 0], // 1 << 20 = 1048576
    [1, 1, 0, 1, 3, 0, 0, 0, 0, 1], // 1 << 22 = 4194304
    [1, 1, 1, 0, 1, 0, 0, 0, 0, 0], // 1 << 10 = 1024
    [1, 1, 1, 1, 0, 1, 1, 1, 1, 1], // 1 << 29 = 536870912
    [1, 1, 2, 0, 0, 1, 0, 1, 0, 1], // 1 << 21 = 2097152
    [1, 2, 1, 1, 0, 0, 0, 1, 0, 0], // 1 << 17 = 131072
    [1, 2, 1, 1, 2, 0, 0, 2, 1, 0], // 1 << 30 = 1073741824
];

impl Solution {
    pub fn reordered_power_of2(n: i32) -> bool {
        let mut n = n;
        let mut digits_count = [0; 10];
        while n > 0 {
            digits_count[(n % 10) as usize] += 1;
            n /= 10;
        }
        GOAL_DIGITS_COUNT.binary_search(&digits_count).is_ok()
    }
}